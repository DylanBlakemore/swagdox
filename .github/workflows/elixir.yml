# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Elixir CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.deps-cache.outputs.cache-key }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Elixir
      uses: erlef/setup-beam@61e01a43a562a89bfc54c7f9a378ff67b03e4a21 # v1.16.0
      with:
        elixir-version: '1.15.2' # [Required] Define the Elixir version
        otp-version: '26.0'      # [Required] Define the Erlang/OTP version
    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
    - name: Install dependencies
      run: mix deps.get
  test:
    name: Run tests
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Restore dependencies cache
        uses: actions/cache@v3
        with:
          path: deps
          key: ${{ needs.build.outputs.cache-key }}
      - name: Set up Elixir
        uses: erlef/setup-beam@61e01a43a562a89bfc54c7f9a378ff67b03e4a21
        with:
          elixir-version: '1.15.2'
          otp-version: '26.0'
      - name: Install dependencies
        run: mix deps.get
      - name: Run tests
        run: mix test
  lint:
    name: Lint
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Restore dependencies cache
        uses: actions/cache@v3
        with:
          path: deps
          key: ${{ needs.build.outputs.cache-key }}
      - name: Set up Elixir
        uses: erlef/setup-beam@61e01a43a562a89bfc54c7f9a378ff67b03e4a21
        with:
          elixir-version: '1.15.2'
          otp-version: '26.0'
      - name: Install dependencies
        run: mix deps.get
      - name: Run formatter
        run: mix format --check-formatted --dry-run
      - name: Run credo
        run: mix credo --all
      - name: Dialyzer
        run: mix dialyzer
